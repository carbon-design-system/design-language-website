.container {
  margin-top: $spacing-05;
  display: grid;
  max-width: 100vw;
  overflow: hidden;
  grid-template-columns: repeat(2, 1fr);

  @include carbon--breakpoint('md') {
    grid-template-columns: repeat(4, 1fr);
  }
}

.card {
  background-color: white;
  --border: 1px solid #{$decorative-01};
  color: $text-02;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;

  @include carbon--breakpoint-down('md') {
    &:nth-of-type(n + 3) {
      border-top: var(--border);
    }
    &:nth-of-type(odd) {
      border-right: var(--border);
    }
  }

  @include carbon--breakpoint('md') {
    border-right: var(--border);
    &:nth-of-type(4n) {
      border-right: none;
    }
    &:nth-of-type(n + 5) {
      border-top: var(--border);
    }
  }
}

.card.dark {
  background-color: black;
  --border: 1px solid #{$carbon--gray-70};
  color: $carbon--gray-30;
}

.card::after {
  content: '';
  display: block;
  padding-bottom: 100%;
}

.card span {
  @include carbon--type-style('label-01');
  position: absolute;
  top: 0;
  left: 0;
  padding: $spacing-05;
}

.card svg {
  width: 48px;
  height: 48px;
}

.themeDropdown {
  border-bottom: none;
}

.filter-row {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  background-color: $decorative-01;
  border-bottom: 1px solid $decorative-01;
  grid-gap: 1px;
  position: sticky;
  z-index: z('dropdown');
  top: 7rem;
  transition: box-shadow $duration--fast-02 ease;
  @include carbon--breakpoint-down('md') {
    grid-template-columns: 1fr 1fr;
  }
}

.filter-row[data-stuck] {
  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2);
}

// search container
.filter-row :global(.bx--search) {
  grid-column-end: span 2;
}

.filter-row :global(.bx--search-input) {
  border-bottom: none;
  font-size: 1rem;
  line-height: revert;
  height: 3rem;
}

.filter-row::before {
  content: '';
  position: absolute;
  z-index: z('dropdown');
  height: 1rem;
  width: 100%;
  top: -1rem;
  background: #f3f3f3;
}
